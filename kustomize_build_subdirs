#!/usr/bin/env sh

if [ -n "$1" ]
then
    BASE_DIRECTORY="$1"
elif [ -n "$INPUT_BASE_DIRECTORY" ]
then
    BASE_DIRECTORY="$INPUT_BASE_DIRECTORY"
fi
if [ -z "$BASE_DIRECTORY" ]; then
    BASE_DIRECTORY="${BASEDIR:-.}"
fi

if [ -n "$2" ]
then
    DEPTH="$2"
elif [ -n "$INPUT_DEPTH" ]
then
    DEPTH="$INPUT_DEPTH"
fi
if [ -z "$DEPTH" ]; then
    DEPTH="4"
fi

DEBUG=0
if [ -n "$3" ]
then
    DEBUG="$3"
elif [ -n "$RUNNER_DEBUG" ]
then
    DEBUG="$RUNNER_DEBUG"
elif [ -z "$DEBUG" ]
then
    DEBUG=0
fi

if [ "$DEBUG" -ne 0 ];
then
    echo "DEBUG LOGGING ENABLED"
    echo "BASE_DIRECTORY: $BASE_DIRECTORY"
    echo "DEPTH: $DEPTH"
    set -x
fi

if [ -d "${BASE_DIRECTORY}" ]
then
    echo 0 > /tmp/rc.tmp
    find "${BASE_DIRECTORY}" -maxdepth "$DEPTH" -mindepth "$DEPTH" -type d | (
        while IFS= read -r d
        do
            (
                cd "$d" || { echo "Cannot enter into $d"; exit 2; }
                if [ -f Kustomization ] || [ -f kustomization.yaml ] || [ -f kustomization.yml ]
                then
                    printf "Validating path: %s..." "${d#"$BASE_DIRECTORY"/*}"
                    if kustomize build >/dev/null
                    then
                        printf "Validated\n"
                    else
                        echo 1 > /tmp/rc.tmp
                        printf "Failed to build kustomization in %s\n" "$d"
                    fi
                else
                    printf "No kustomizations found in %s\n" "$d"
                fi
            )
        done
    )
    RC=$(cat /tmp/rc.tmp)
    rm /tmp/rc.tmp
    printf "Complete\n"
    exit "$RC"
else
    printf "Directory %s does not exist\n" "$BASE_DIRECTORY"
    exit 1
fi